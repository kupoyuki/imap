#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
多次元尺度構成法
Multidimensional Scaling; MDS
"""
 
import numpy as np
import matplotlib.pyplot as plt
 
# airline distances between 10 US cities
d = """0.414213562,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.289897949,0.289897949,0.289897949,0.289897949,0.289897949,0.289897949,0.274291885,0.274291885,0.274291885,0.25;
1,0.5,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.309016994,0.289897949,0.289897949,0.289897949,0.289897949,0.274291885,0.274291885,0.261203875;
0.5,0.5,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.309016994,0.289897949,0.289897949,0.289897949,0.289897949,0.289897949,0.261203875;
1,0.5,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.309016994,0.309016994,0.274291885,0.240253073,0.224009238;
0.5,0.5,0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.309016994,0.309016994,0.309016994,0.289897949,0.289897949,0.274291885,0.261203875,0.261203875;
1,1,0.5,0.414213562,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.309016994,0.309016994,0.274291885,0.274291885,0.274291885,0.261203875,0.261203875,0.25,0.240253073,0.224009238;
1,0.414213562,0.366025404,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.309016994,0.309016994,0.309016994,0.289897949,0.289897949,0.289897949,0.289897949,0.261203875,0.25,0.240253073;
1,0.5,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.333333333,0.309016994,0.309016994,0.309016994,0.289897949,0.289897949,0.289897949,0.289897949,0.289897949,0.274291885,0.274291885,0.274291885,0.261203875,0.25,0.240253073;
1,0.5,0.5,0.414213562,0.414213562,0.414213562,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.309016994,0.309016994,0.309016994,0.309016994,0.289897949,0.289897949,0.289897949,0.274291885,0.261203875,0.25;
1,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.309016994,0.309016994,0.289897949,0.289897949,0.289897949,0.274291885,0.274291885,0.261203875,0.240253073;
1,1,0.5,0.5,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.333333333,0.333333333,0.309016994,0.309016994,0.289897949,0.274291885,0.274291885,0.274291885,0.261203875,0.25,0.25;
1,0.5,0.5,0.366025404,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.309016994,0.309016994,0.309016994,0.289897949,0.289897949,0.274291885,0.274291885,0.274291885,0.240253073,0;
0.5,0.414213562,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.366025404,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.309016994,0.309016994,0.289897949,0.289897949;
0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.309016994,0.309016994,0.289897949,0.289897949,0.289897949,0.274291885,0.274291885,0.25;
0.414213562,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.309016994,0.309016994,0.309016994,0.309016994,0.309016994,0.309016994,0.289897949,0.289897949,0.274291885,0.261203875,0.261203875;
0.5,0.5,0.5,0.414213562,0.366025404,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.289897949,0.289897949,0.289897949,0.289897949,0.289897949,0.25,0.240253073,0.240253073;
1,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.366025404,0.366025404,0.333333333,0.309016994,0.309016994,0.309016994,0.309016994,0.309016994,0.289897949,0.274291885,0.274291885,0.261203875,0.261203875,0.261203875,0.25,0.240253073;
1,1,0.5,0.5,0.414213562,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.289897949,0.274291885,0.274291885,0.274291885,0.240253073;
1,0.5,0.5,0.414213562,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.309016994,0.289897949,0.274291885,0.274291885,0.25,0.25;
1,0.5,0.5,0.5,0.5,0.5,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0;
1,1,0.5,0.5,0.5,0.5,0.5,0.414213562,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.366025404,0.366025404,0.366025404,0.366025404,0.366025404,0.333333333,0.309016994,0.289897949,0.25;
1,1,1,1,1,1,1,0.5,0.5,0.5,0.5,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.333333333,0.333333333,0.333333333,0.333333333,0.309016994,0.274291885;
1,1,0.5,0.5,0.5,0.5,0.5,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.414213562,0.366025404,0.366025404,0.366025404,0.366025404,0.309016994,0.289897949,0.289897949,0.289897949"""
 
# データ読み込み
D = np.array(np.mat(d))
N = len(D)
 
# 距離の2乗の行列 (arrayだと要素同士の掛け算になる)
S = D * D
 
# 中心化行列
one = np.eye(N) - np.ones((N,N))/N
 
# ヤング・ハウスホルダー変換
P = - 1.0/2 * one * S * one
 
# スペクトル分解
w,v = np.linalg.eig(P)
ind = np.argsort(w)
x1 = ind[-1] # 1番
x2 = ind[-2] # 2番
print w[x1],w[x2]
 
# 標準されたデータの固有値が求められているので標準偏差を掛けて可視化
s = P.std(axis=0)
w1 = s[x1]
w2 = s[x2]
for i in range(N):
    plt.plot(w1*v[i,x1],w2*v[i,x2],'b.')
    print w1*v[i,x1],w2*v[i,x2]
plt.draw()
#plt.show()